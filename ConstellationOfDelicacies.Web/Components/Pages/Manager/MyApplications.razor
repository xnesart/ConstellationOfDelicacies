@page "/ApplicationComponent"
@using ConstellationOfDelicacies.Bll.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@using ConstellationOfDelicacies.Web.Components.Pages.Auth

@inject NavigationManager navManager
@rendermode InteractiveServer

<PageTitle>Мои заказы</PageTitle>

<AuthorizeView Roles="Менеджер">
    <Authorized>
        <div class="col-12 application-component">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Содержание заказа</th>
                        <th>Дата заказа</th>
                        <th>Пожелания</th>
                        <th>Имя клиента</th>
                        <th>Адрес</th>
                        <th>Телефон</th>
                        <th>Повар</th>
                        <th>Официант</th>
                        <th>Позвонить</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in applicationsList)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Services</td>
                            <td>@item.OrderDate</td>
                            <td>@item.Wishes</td>
                            <td>@item.ClientName</td>
                            <td>@item.Address</td>
                            <td>@item.Phone</td>
                            <td>
                                <select class="form-select" aria-label="Выбрать повара">
                                    @foreach (var chief in _chiefs)
                                    {
                                        <option value="@chief.Id">@chief.Name</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <select class="form-select" aria-label="Выбрать официанта">
                                    @foreach (var waiter in _waiters)
                                    {
                                        <option value="@waiter.Id">@waiter.Name</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <button class="btn btn-primary" type="button">Позвонить</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </Authorized>
    <NotAuthorized>
        <HomeRedirect/>
    </NotAuthorized>
</AuthorizeView>



@code {
    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    public MyApplications()
    {
        _orders = new List<OrdersOutputModel>();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            new Application
            {
                Id = 1,
                Services = "Заказ 1",
                OrderDate = DateTime.Now,
                Wishes = "Нет особых пожеланий",
                ClientName = "Иван",
                Address = "ул. Пушкина, д. 10",
                Phone = "123-456-7890"
            },
            new Application
            {
                Id = 2,
                Services = "Заказ 2",
                OrderDate = DateTime.Now.AddDays(-1),
                Wishes = "Соус на боке",
                ClientName = "Мария",
                Address = "ул. Лермонтова, д. 20",
                Phone = "987-654-3210"
            },
        };

        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        _managerId = 20;
        //await GetClaimsPrincipalData();

        IOrderClient orderClient = new OrderClient();
        _orders = orderClient.GetManagerOrders(_managerId);

        await base.OnInitializedAsync();
    }

}