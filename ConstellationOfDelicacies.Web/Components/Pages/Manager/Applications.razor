@page "/applications"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using ConstellationOfDelicacies.Bll.Clients
@using ConstellationOfDelicacies.Bll.Interfaces
@using ConstellationOfDelicacies.Web.Components.Templates.Manager

@inject NavigationManager navManager
@rendermode InteractiveServer

<PageTitle>Заявки заказов</PageTitle>

<div>
    @foreach (var o in _orders)
    {
        <div>
            <FreeOrderCardTemplate ManagerId="_managerId" Order="o"/>
        </div>
    }
</div>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>();

    private List<OrdersOutputModel> _orders;

    private int _managerId;

    public Applications()
    {
        _orders = new List<OrdersOutputModel>();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();

            _managerId = Int32.Parse(claims.Where(c => c.Type == "UserId").Single().Value);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        //await GetClaimsPrincipalData();

        IOrderClient orderClient = new OrderClient();
        _orders = orderClient.GetFreeOrders();

        await base.OnInitializedAsync();
    }

    protected override void OnAfterRender(bool firstRender)
    {

         
        base.OnAfterRender(firstRender);
    }

}