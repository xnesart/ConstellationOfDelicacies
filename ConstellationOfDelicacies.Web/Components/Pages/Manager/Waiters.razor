@page "/waiters"
@using ConstellationOfDelicacies.Bll.Clients
@using Microsoft.AspNetCore.Components.Authorization
@using ConstellationOfDelicacies.Web.Components.Pages.Auth
@using ConstellationOfDelicacies.Web.Components.Templates.Manager

@inject NavigationManager navManager
@rendermode InteractiveServer

<AuthorizeView Roles="Менеджер">
    <Authorized>
        <PageTitle>Официанты</PageTitle>

        <Modal @ref="modal" />

        <div class="container">
            <div class="add-worker">
                <Button Color="ButtonColor.Primary" @onclick="ShowModal">Добавить официанта</Button>
            </div>

            <CardGroup>
                @foreach (var waiter in _waiters)
                {
                    <WorkerCardTemplate Worker="@waiter" />
                }
            </CardGroup>
        </div>
    </Authorized>
    <NotAuthorized>
        <HomeRedirect/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Modal modal = default!;

    private List<UsersOutputModel> _waiters;
    private UserClient _client;

    public Waiters()
    {
        _client = new UserClient();
        _waiters = new List<UsersOutputModel>();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        _waiters = _client.GetAllWaiters();
        base.OnAfterRender(firstRender);
    }

    private async Task ShowModal()
    {
        modal.IsVerticallyCentered = true;
        modal.IsScrollable = true;
        await modal.ShowAsync<AddWaiterTemplate>(title: "Добавить официанта");
    }

}