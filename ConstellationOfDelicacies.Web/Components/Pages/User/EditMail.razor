@page "/edit-mail"
@using ConstellationOfDelicacies.Bll.Models.InputModels
@using ConstellationOfDelicacies.Bll.Clients
@inject NavigationManager navManager
@rendermode InteractiveServer

<h3>EditMail</h3>
<div class="login-form">
    <EditForm class="row g-3" Model="@Model" OnValidSubmit="@SaveChanges" FormName="LoginForm">
        <div class="col-md-12">
            <label for="login-mail" class="form-label">Введите старую почту:</label>
            <InputText type="text" class="form-control" id="login-mail" placeholder="почта"
                       @bind-Value="Model.Mail"/>
        </div>
        <div class="col-md-12">
            <label for="login-new-mail" class="form-label">Введите новую почту:</label>
            <InputText type="text" class="form-control" id="login-new-mail" placeholder="новая почта"
                       @bind-Value="Model.NewMail"/>
        </div>
        <div class="col-md-12" lass="col-12">
            <button type="submit" class="btn btn-primary">Сохранить изменения</button>
        </div>    
    </EditForm>
</div>
@code {
    [SupplyParameterFromForm]
    public AccountEditInputModel Model { get; set; }

    public EditMail()
    {
        Model = new AccountEditInputModel();
    }

    private void SaveChanges()
    {
        UserClient userClient = new UserClient();
        var user= userClient.GetAllUsers().Where(u => u.Mail == Model.Mail).FirstOrDefault();
        if (user != null)
        {
            RolesInputModel roleInput = new RolesInputModel()
            {
                Id = user.Role.Id,
                Title = user.Role.Title
            };
            UsersInputModel userModel = new UsersInputModel()
            {
                Id=user.Id,
                FirstName = user.FirstName,
                LastName = user.LastName,
                MiddleName = user.MiddleName,
                Phone = user.Phone,
                Mail = Model.NewMail,
                Password = user.Password,
                Role = roleInput
            };
            userClient.UpdateUserWithEmail(userModel);
            navManager.NavigateTo("./"); 
        }
    }
}