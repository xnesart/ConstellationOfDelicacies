@page "/order"
@using ConstellationOfDelicacies.Bll.IUser
@rendermode InteractiveServer

<PageTitle>Сделать Заказ</PageTitle>

<div class="order-container">
    <h3>Оформление заказа</h3>

    
        <form class="row g-3 order-form">
            <div class="col-md-12">
                <label for="date-time" class="form-label">Выберите дату и время:</label>
                <input type="datetime-local" class="form-control" id="date-time"
                       name="date-time" min="@_minDate.ToString("s")" placeholder="@_minDate" 
                       oninput="@SetOrderDate"/>
                <p class="order-form-note">*Заказы принимаются не позднее, чем за неделю</p>
            </div>

            <div class="col-md-12">
                <label for="numOfPersons" class="form-label">Введите количество персон:</label>
                <input type="number" class="form-control" id="numOfPersons" 
                       name="numOfPersons" min="1" placeholder="Число персон" oninput="@SetNumOfPersons"/>
            </div>

            <div class="col-md-12">
                <label for="address" class="form-label">Введите адрес:</label>
                <input type="text" class="form-control" id="address" name="address" 
                       required maxlength="255" placeholder="Адрес" oninput="@SetAddress"/>
            </div>

            <div class="col-md-12">
                <label for="comment" class="form-label">Ваши пожелания:</label>
                <input type="text" class="form-control" id="comment" name="comment" 
                       required maxlength="255" placeholder="Пожелания" oninput="@SetComment"/>
            </div>

            <div class="col-12">
                <button type="submit" class="btn btn-primary" onclick="@AddOrder">Заказать</button>
            </div>
        </form>
   
</div>

@code {

    IUser user;
    private DateTime _orderDate;
    private DateTime _minDate = DateTime.Today.AddDays(7);
    private int _numberOfPersons;
    private string _comment;
    private string _address;
    
    public CreateOrder()
    {
        user = new UserMock();
    }

    private void SetOrderDate(ChangeEventArgs e)
    {
        _orderDate = DateTime.Parse(e.Value.ToString());
    }

    private void SetNumOfPersons(ChangeEventArgs e)
    {
        _numberOfPersons = Int32.Parse(e.Value.ToString());
    }

    private void SetComment(ChangeEventArgs e)
    {
        _comment = e.Value.ToString();
    }

    private void SetAddress(ChangeEventArgs e)
    {
        _address = e.Value.ToString();
    }

    public void AddOrder()
    {
        OrderInputModel model = new OrderInputModel()
        {
            UserId = 77,
            OrderDate = _orderDate,
            Comment = _comment,
            Address = _address,
            NumberOfPersons = _numberOfPersons,
        };
        user.AddUserOrder(model);

    }

}
