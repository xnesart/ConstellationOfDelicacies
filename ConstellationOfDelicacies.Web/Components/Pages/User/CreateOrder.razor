@page "/create_order"

@using ConstellationOfDelicacies.Bll.Models.InputModels
@using Microsoft.AspNetCore.Components.Forms
@using ConstellationOfDelicacies.Bll.Clients
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using ConstellationOfDelicacies.Web.Components.Pages.Auth
@using ConstellationOfDelicacies.Web.Components.Templates.User

@inject NavigationManager navManager
@rendermode InteractiveServer

<AuthorizeView Roles="Менеджер, Сотрудник">
    <Authorized>
        <HomeRedirect/>
    </Authorized>

    <NotAuthorized Context="Auth">

        <PageTitle>Сделать Заказ</PageTitle> 
        
        <Card>
            <CardBody>
                <div class="order-container">
                    <CardTitle>Оформление заказа</CardTitle>

                    <CreateOrderTemplate UserId="_userId"/>
                </div>
            </CardBody>
        </Card>            
        
    </NotAuthorized>
</AuthorizeView>



@code {

    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>(); 

    private int _userId;

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();

            _userId = Int32.Parse(claims.Where(c => c.Type == "UserId").Single().Value);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetClaimsPrincipalData();
        await base.OnInitializedAsync();
    }

}
