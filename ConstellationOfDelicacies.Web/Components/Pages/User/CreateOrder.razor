@page "/create_order"

@using ConstellationOfDelicacies.Bll.Models.InputModels
@using Microsoft.AspNetCore.Components.Forms
@using ConstellationOfDelicacies.Bll.Clients
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject NavigationManager navManager
@rendermode InteractiveServer

<PageTitle>Сделать Заказ</PageTitle>

<div class="order-container">
    <h3>Оформление заказа</h3>
   
    <div class="order-form">
        
        <EditForm class="row g-3" Model="@Model" OnValidSubmit="@AddOrder">
            <DataAnnotationsValidator />
            
            <div class="col-md-12">
                <label for="order-date" class="form-label">Выберите дату:</label>
                <DateInput TValue="DateOnly" @bind-Value="Model.OrderDateOnly" EnableMinMax="true" 
                           Min="@_minDate" Max="@_maxDate" id="order-date" class="form-control" />
                <p class="order-form-note">*Заказы принимаются не менее чем за неделю и не более чем на три месяца вперед</p>
            </div>
            <div class="col-md-12">
                <label for="order-time" class="form-label">Выберите время:</label>
                <TimeInput TValue="TimeOnly" @bind-Value="Model.OrderTimeOnly" EnableMinMax="true" 
                           Min="@_minTime" Max="@_maxTime" id="order-time" class="form-control" />
                <p class="order-form-note">*Время работы с 6:00 до 24:00. Последний заказ возможен в 23:00</p>
            </div>
            <div class="col-md-12">
                <label for="order-num-of-per" class="form-label">Введите количество персон:</label>
                <InputNumber class="form-control" @bind-Value="Model.NumberOfPersons" id="order-num-of-per" />
            </div>
            <div class="col-md-12">
                <label for="order-address" class="form-label">Введите адрес:</label>
                <InputText class="form-control" @bind-Value="Model.Address" id="order-address" 
                           placeholder="Адрес"/>
            </div>
            <div class="col-md-12">
                <label for="order-comment" class="form-label">Ваши пожелания:</label>
                <InputText class="form-control" type="text" @bind-Value="Model.Comment" id="order-comment" 
                           placeholder="Пожелания"/>
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary">Заказать</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public OrderInputModel Model { get; set; }

    IOrderClient user;
    private DateOnly _minDate;
    private DateOnly _maxDate;
    private TimeOnly _minTime = new TimeOnly(6, 0);
    private TimeOnly _maxTime = new TimeOnly(23, 0);

    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>();

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();

            if (claims.Where(c => c.Type == ClaimTypes.Role).Single().Value != "Пользователь")
            {
                navManager.NavigateTo("./");
            }
        }
    }

    public CreateOrder()
    {
        Model = new OrderInputModel();
        user = new OrderClient();

        _minDate = DateOnly.FromDateTime(DateTime.Today.AddDays(7));
        _maxDate = _minDate.AddMonths(3);
    }

    protected override async Task OnInitializedAsync()
    {
        await GetClaimsPrincipalData();
        await base.OnInitializedAsync();
    }

    public void AddOrder()
    {
        Model.OrderDate = Model.OrderDateOnly.ToDateTime(Model.OrderTimeOnly);
        Model.UserId = 77;
        user.AddUserOrder(Model);

    }

}
