@using ConstellationOfDelicacies.Bll.Models.InputModels

<Modal @ref="modal" />

<Card Style="width:330px; margin-bottom: 10px; margin-right: 10px">
    <CardBody>
        <CardTitle>
            <div class="task-header">
                <div class="task-header-title"><span>@Task.Title</span></div>
                <div class="task-status">
                    <TaskStatusTemplate Status="Task.Status" />
                </div>                
            </div>            
        </CardTitle>
        <CardText>
            <div class="task-workers">
                <div>
                    <p class="order-tasks-title task-workers-title">Сотрудники:</p>
                </div>
                @if (Task.Users.Count() == 0)
                {
                    <div>
                        <p>не назначены</p>
                    </div>                    
                } else
                {
                    <div>
                        @foreach (var u in Task.Users)
                        {
                            <p>@u.FirstName @u.LastName</p>
                        }
                    </div>                    
                }
            </div>
        </CardText>
        <div>
            <Button class="task-button" Color="ButtonColor.Primary" Type="ButtonType.Button" @onclick="EditTask">
                Изменить задачу
            </Button>
            <Button class="task-button" Color="ButtonColor.Primary" Type="ButtonType.Button">
                Изменить сотрудников
            </Button>
        </div>
        
    </CardBody>
</Card>

@code {
    [Parameter, EditorRequired]
    public TasksOutputModel Task { get; set; }

    [Parameter]
    public Action UpdatePage { get; set; }

    private Modal modal = default!;

    private async void EditTask()
    {
        modal.IsVerticallyCentered = true;
        modal.IsScrollable = true;

        var parameters = new Dictionary<string, object>();
        parameters.Add("Task", Task);
        parameters.Add("UpdatePage", UpdatePage);

        await modal.ShowAsync<EditTaskTemplate>(title: $"Изменить задачу: {Task.Title}", parameters: parameters);
    }

}
