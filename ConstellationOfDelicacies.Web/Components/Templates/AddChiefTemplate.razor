@page "/chief"
@using ConstellationOfDelicacies.Bll.IManager
@using ConstellationOfDelicacies.Bll.Models.InputModels
@using ConstellationOfDelicacies.Bll.Clients
@using ConstellationOfDelicacies.Dal
@rendermode InteractiveServer

<h3>Добавить повара</h3>
<div class="registration-form">

    <EditForm class="row g-3" Model="@Chief" OnValidSubmit="@AddChief">
        <DataAnnotationsValidator />

        <div class="col-md-12">
            <label for="chief-firstname" class="form-label">Введите имя:</label>
            <InputText class="form-control" @bind-Value="@Chief.FirstName" id="chief-firstname"
                       placeholder="Имя"/>
        </div>
        <div class="col-md-12">
            <label for="chief-lastname" class="form-label">Введите фамилию:</label>
            <InputText class="form-control" @bind-Value="@Chief.LastName" id="chief-lastname"
                       placeholder="Фамилия" />
        </div>
        <div class="col-md-12">
            <label for="chief-middlename" class="form-label">Введите отчество:</label>
            <InputText class="form-control" @bind-Value="@Chief.MiddleName" id="chief-middlename"
                       placeholder="Отчество" />
            <p class="order-form-note">*Если отсутствует, оставьте поле пустым</p>
        </div>
        <div class="col-md-12">
            <label for="chief-mail" class="form-label">Введите электронную почту:</label>
            <InputText type="email" class="form-control" @bind-Value="@Chief.Mail" id="chief-mail"
                       placeholder="E-mail" />
        </div>
        <div class="col-md-12">
            <label for="chief-phone" class="form-label">Введите номер телефона:</label>
            <InputText type="tel" class="form-control" @bind-Value="@Chief.Phone" id="chief-phone"
                       placeholder="Номер телефона" pattern="8[0-9]{10}"/>
            <p class="order-form-note">*В формате: 81112223333</p>
        </div>
        <div class="col-md-12">
            <label for="chief-password" class="form-label">Введите новый пароль:</label>
            <InputText class="form-control" @bind-Value="@Chief.Password" id="chief-password"
                       placeholder="Пароль" />
            <p class="order-form-note">*Минимум 4 символа</p>
        </div>
        <div class="col-md-12">
            <label for="chief-profile" class="form-label">Должность</label>
            <select class="form-control" @onchange="AddProfile" id="chief-profile">
                <option value="Повар">Повар</option>
                <option value="Повар кондитер">Повар кондитер</option>
                <option value="Повар холодного цеха">Повар холодного цеха</option>
                <option value="Повар горячего цеха">Повар горячего цеха</option>
                <option value="Су-шеф">Су-шеф</option>
                <option value="Шеф повар">Шеф повар</option>
            </select>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Добавить</button>
            <a href="/chiefs" class="btn btn-primary waiters-edit-back-button waiters-add-back-link">Вернуться назад</a>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    public UsersInputModel Chief { get; set; }

    private List<WorkerOutputModel> _chiefs;
    IManager manager;
    private string _specialization;

    public AddChiefTemplate()
    {
        manager = new ManagerMock();
        _chiefs = manager.GetAllChiefs();
        Chief = new UsersInputModel();
    }

    private void AddProfile(ChangeEventArgs a)
    {
        _specialization = a.Value.ToString();

    }

    // private enum SubRoleId
    // {
    //     WaiterNew = 1,
    //     WaiterThree,
    //     WaiterTwo,
    //     WaiterOne,
    //     WaiterHigt,
    //     Sommelier
    // }

    private void AddChief()
    {
        //TODO: тут роль "Сотрудник", а профиль "Повар-Кондитер"
        

        // tmpSpecialization.Title = specialization.Title;
        
        
        
        //_chief.Role = tmpRole; //это тоже к туду, тут профиль должен быть

        var specialization = GetSpecialization(_specialization);
        
     
        IUserClient userClient = new UserClient();
        userClient.AddUser(Chief);
    }

    public SpecializationsOutputModel  GetSpecialization(string specializationStr)
    {
        SpecializationClient specializationClient = new SpecializationClient();
        var specializations = specializationClient.GetAllSpecializations();
        var foundSpecialization = specializations.FirstOrDefault(s => s.Profiles.Any(p => p.Title == specializationStr));

        return foundSpecialization;
    }
}