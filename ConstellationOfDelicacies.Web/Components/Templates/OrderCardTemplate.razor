@using ConstellationOfDelicacies.Web.Components.Templates.Manager
@using ConstellationOfDelicacies.Bll.Enums
@rendermode InteractiveServer

<Card>
    <CardBody Class="d-flex flex-row justify-content-between">
        <div>
            <CardTitle><span class="order-tasks-title">Заказ: @Order!.Id</span></CardTitle>
            <CardSubTitle class="order-tasks-side-text mb-2">
                <p>Заказчик: @_userName</p>
                <p>Номер телефона: @_userPhone</p>
                <p>Электронная почта: @_userMail</p>
            </CardSubTitle>
            <CardText>
                <p><span class="order-tasks-title">Количество человек:</span> @Order!.NumberOfPersons</p>
                <p><span class="order-tasks-title">Комментарий заказчика:</span> @Order!.Comment</p>
                <p><span class="order-tasks-title">Адресс проведения:</span> @Order!.Address</p>
            </CardText>
            <ul>
                <li>Стоимость заказа: @Order!.TotalPrice</li>
            </ul>
        </div>
        <div class="d-flex flex-column align-items-center justify-content-between">
            <ManagerOrderStatusTemplate Status="Order.Status"/>
            @if (Order.Status == OrderStatuses.InProgress)
            {
                <div>
                    <Button Color="ButtonColor.Primary">Завершить</Button>
                    <Button Color="ButtonColor.Warning">Отменить</Button>
                </div>                
            }            
        </div>
    </CardBody>
</Card>

@code {

    [Parameter, EditorRequired]
    public OrdersOutputModel? Order { get; set; }

    private string? _userName;
    private string? _userPhone;
    private string? _userMail;

    protected override void OnInitialized()
    {
        if (Order == null)
        {
            _userName = "???";
            Order = new OrdersOutputModel()
                {
                    Id = 0,
                    NumberOfPersons = 0,
                    Comment = "???",
                    Address = "???"
                };
        } 
        else
        {
            var user = Order.Tasks.Where(t => t.Title == "Пользователь").Single().Users.First();
            _userName = $"{user.FirstName} {user.LastName}";
        }  

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (Order.Tasks != null)
        {
            var user = Order.Tasks.Where(t => t.Title == "Пользователь").Single().Users.First();
            _userName = $"{user.FirstName} {user.LastName}";
            _userPhone = user.Phone;
            _userMail = user.Mail;
            StateHasChanged();
        }
        base.OnAfterRender(firstRender);
    }
}
