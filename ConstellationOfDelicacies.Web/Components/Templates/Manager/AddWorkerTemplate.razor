@using ConstellationOfDelicacies.Bll.Models.InputModels
@using ConstellationOfDelicacies.Bll.Clients
@using ConstellationOfDelicacies.Bll.Enums
@using System
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div>
    @if (_isSubmited)
    {
        <div class="alert alert-success">
            Сотрудник "@_submitedName" добавлен
        </div>
    }
    <EditForm Model="@Model" class="row g-3" OnValidSubmit="@AddWorker" FormName="AddWorker">
        <DataAnnotationsValidator />

        <div class="col-md-12">
            <label for="worker-firstname" class="form-label">Введите имя:</label>
            <InputText class="form-control" @bind-Value="@Model.FirstName" id="worker-firstname"
                       placeholder="Имя" />
        </div>
        <div class="col-md-12">
            <label for="worker-lastname" class="form-label">Введите фамилию:</label>
            <InputText class="form-control" @bind-Value="@Model.LastName" id="worker-lastname"
                       placeholder="Фамилия" />
        </div>
        <div class="col-md-12">
            <label for="worker-middlename" class="form-label">Введите отчество:</label>
            <InputText class="form-control" @bind-Value="@Model.MiddleName" id="worker-middlename"
                       placeholder="Отчество" />
            <p class="order-form-note">*Если отсутствует, оставьте поле пустым</p>
        </div>
        <div class="col-md-12">
            <label for="worker-mail" class="form-label">Введите электронную почту:</label>
            <InputText type="email" class="form-control" @bind-Value="@Model.Mail" id="worker-mail"
                       placeholder="E-mail" />
        </div>
        <div class="col-md-12">
            <label for="worker-phone" class="form-label">Введите номер телефона:</label>
            <InputText type="tel" class="form-control" @bind-Value="@Model.Phone" id="worker-phone"
                       placeholder="Номер телефона" pattern="8[0-9]{10}" />
            <p class="order-form-note">*В формате: 81112223333</p>
        </div>
        <div class="col-md-12">
            <label for="worker-password" class="form-label">Введите новый пароль:</label>
            <InputText class="form-control" @bind-Value="@Model.Password" id="worker-password"
                       placeholder="Пароль" />
            <p class="order-form-note">*Минимум 4 символа</p>
        </div>
        <div class="col-md-12">
            <label for="worker-profile" class="form-label">Профиль</label>
            <InputSelect class="form-control" id="worker-profile" @bind-Value="@Model.Profile!.Id">
                <option disabled selected value style="display:none"></option>
                @foreach (var p in _profiles)
                {
                    <option value="@p.Id">@p.Title</option>
                }
            </InputSelect>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Добавить</button>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private UsersInputModel Model { get; set; }

    [Parameter, EditorRequired]
    public int SpId { get; set; }

    [Parameter]
    public Action UpdatePage { get; set; }

    private List<ProfilesOutputModel> _profiles;
    private string _submitedName;
    private bool _isSubmited;

    public AddWorkerTemplate()
    {
        Model = new UsersInputModel();
        Model.Role = new RolesInputModel() { Id = (int)Roles.Worker };
        Model.Profile = new ProfilesInputModel();

        _profiles = new List<ProfilesOutputModel>();

        _submitedName = "";
    }

    protected override void OnInitialized()
    {
        ProfileClient profileClient = new ProfileClient();
        _profiles = profileClient.GetProfiles(SpId); 

        base.OnInitializedAsync();
        SpecializationClient spClient = new SpecializationClient();

    }

    public void AddWorker()
    {
        UserClient userClient = new UserClient();
        userClient.AddUser(Model);

        _submitedName = $"{Model.FirstName} {Model.LastName}";
        _isSubmited = true;

        Model = new UsersInputModel();

        UpdatePage();
        StateHasChanged();
    }
}
